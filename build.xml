<?xml version="1.0" encoding="UTF-8"?>
<project name="raiderplanner" default="all">
  
  
  <property file="build.properties"/>
  <!-- Uncomment the following property if no tests compilation is needed -->
  <!-- 
  <property name="skip.tests" value="true"/>
   -->
  

  <!-- Compiler options -->
    <presetdef name="javac">
        <javac includeantruntime="false" />
    </presetdef>



  
  <property name="compiler.debug" value="on"/>
  <property name="compiler.generate.no.warnings" value="off"/>
  <property name="compiler.args" value=""/>
  <property name="compiler.max.memory" value="700m"/>
  <patternset id="ignored.files">
    <exclude name="**/*.hprof/**"/>
    <exclude name="**/*.pyc/**"/>
    <exclude name="**/*.pyo/**"/>
    <exclude name="**/*.rbc/**"/>
    <exclude name="**/*.yarb/**"/>
    <exclude name="**/*~/**"/>
    <exclude name="**/.DS_Store/**"/>
    <exclude name="**/.git/**"/>
    <exclude name="**/.hg/**"/>
    <exclude name="**/.svn/**"/>
    <exclude name="**/CVS/**"/>
    <exclude name="**/__pycache__/**"/>
    <exclude name="**/_svn/**"/>
    <exclude name="**/vssver.scc/**"/>
    <exclude name="**/vssver2.scc/**"/>
  </patternset>
  <patternset id="library.patterns">
    <include name="*.egg"/>
    <include name="*.jar"/>
    <include name="*.ear"/>
    <include name="*.swc"/>
    <include name="*.war"/>
    <include name="*.ane"/>
    <include name="*.zip"/>
  </patternset>
  <patternset id="compiler.resources">
    <exclude name="**/?*.java"/>
    <exclude name="**/?*.form"/>
    <exclude name="**/?*.class"/>
    <exclude name="**/?*.groovy"/>
    <exclude name="**/?*.scala"/>
    <exclude name="**/?*.flex"/>
    <exclude name="**/?*.kt"/>
    <exclude name="**/?*.clj"/>
    <exclude name="**/?*.aj"/>
  </patternset>
  
  <!-- Modules -->
  
  
  <!-- Module RaiderPlanner -->
  
  <dirname property="module.raiderplanner.basedir" file="${ant.file}"/>


  <path id="external.classpath">
    <pathelement location="${basedir}/lib/guava-21.0.jar"/>
    <pathelement location="${basedir}/lib/hamcrest-all-1.3.jar"/>
    <pathelement location="${basedir}/lib/hamcrest-generator-1.3.jar"/>
    <pathelement location="${basedir}/lib/hamcrest-integration-1.3.jar"/>
    <pathelement location="${basedir}/lib/hamcrest-junit-2.0.0.0.jar"/>
    <pathelement location="${basedir}/lib/hamcrest-library-1.3.jar"/>
    <pathelement location="${basedir}/lib/testfx-core-4.0.0-20150226.214553-8-sources.jar"/>
    <pathelement location="${basedir}/lib/testfx-core-4.0.6-alpha.jar"/>
    <pathelement location="${basedir}/lib/testfx-junit5-4.0.6-alpha.jar"/>
    <pathelement location="${basedir}/lib/testfx-junit-4.0.6-alpha.jar"/>
    <pathelement location="${basedir}/lib/testfx-legacy-4.0.6-alpha.jar"/>
    <pathelement location="${basedir}/lib/jfxtras-agenda-8.0-r5.jar"/>
    <pathelement location="${basedir}/lib/jfxtras-controls-8.0-r5.jar"/>
    <pathelement location="${basedir}/lib/jfxtras-common-8.0-r5.jar"/>
    <pathelement location="${basedir}/lib/AppleJavaExtensions-1.6.jar"/>
	<pathelement location="${basedir}/lib/commons-validator-1.6.jar"/>

  </path>
  
  
  <property name="compiler.args.raiderplanner" value="-encoding UTF-8 -source 8 -target 8 ${compiler.args}"/>
  
  <property name="raiderplanner.output.dir" value="${module.raiderplanner.basedir}/out/production/RaiderPlanner"/>
  <property name="raiderplanner.testoutput.dir" value="${module.raiderplanner.basedir}/out/test/RaiderPlanner"/>
  <property name="raiderplanner.jaroutput.dir" value="${module.raiderplanner.basedir}/out/jar"/>
  
  <path id="raiderplanner.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>

  <path id="raiderplanner.module.production.classpath"/>
  
  <path id="raiderplanner.runtime.production.module.classpath">
    <pathelement location="${raiderplanner.output.dir}"/>
  </path>
  
  <path id="raiderplanner.module.classpath">
    <pathelement location="${raiderplanner.output.dir}"/>
    <pathelement location="lib/hamcrest-core-1.3.jar"/>
    <pathelement location="lib/junit-4.12.jar"/>
  </path>
  
  <path id="raiderplanner.runtime.module.classpath">
    <pathelement location="${raiderplanner.testoutput.dir}"/>
    <pathelement location="${raiderplanner.output.dir}"/>
    <pathelement location="lib/hamcrest-core-1.3.jar"/>
    <pathelement location="lib/junit-4.12.jar"/>
  </path>
  
  
  <patternset id="excluded.from.module.raiderplanner">
    <patternset refid="ignored.files"/>
  </patternset>
  
  <patternset id="excluded.from.compilation.raiderplanner">
    <patternset refid="excluded.from.module.raiderplanner"/>
  </patternset>
  
  <path id="raiderplanner.module.sourcepath">
    <dirset dir="${module.raiderplanner.basedir}">
      <include name="src"/>
    </dirset>
  </path>
  
  <path id="raiderplanner.module.test.sourcepath">
    <dirset dir="${module.raiderplanner.basedir}">
      <include name="Test"/>
    </dirset>
  </path>
  
  
  <target name="compile.module.raiderplanner" depends="compile.module.raiderplanner.production,compile.module.raiderplanner.tests" description="Compile module Planner"/>
  
  <target name="compile.module.raiderplanner.production" description="Compile module RaiderPlanner; production classes">
    <mkdir dir="${raiderplanner.output.dir}"/>

    <javac destdir="${raiderplanner.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true">
      <compilerarg line="${compiler.args.raiderplanner}"/>
      <bootclasspath refid="raiderplanner.module.bootclasspath"/>
      <classpath refid="raiderplanner.module.production.classpath"/>
      <classpath>
        <path refid="external.classpath" />
      </classpath>
      <src refid="raiderplanner.module.sourcepath"/>
      <patternset refid="excluded.from.compilation.raiderplanner"/>
    </javac>
    
    <copy todir="${raiderplanner.output.dir}">
      <fileset dir="${module.raiderplanner.basedir}/src">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="compile.module.raiderplanner.tests" depends="compile.module.raiderplanner.production" description="compile module RaiderPlanner; test classes" unless="skip.tests">
    <mkdir dir="${raiderplanner.testoutput.dir}"/>
    <javac destdir="${raiderplanner.testoutput.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true">
      <compilerarg line="${compiler.args.raiderplanner}"/>
      <bootclasspath refid="raiderplanner.module.bootclasspath"/>
      <classpath>
        <path refid="external.classpath" />
      </classpath>
      <classpath refid="raiderplanner.module.classpath"/>
      <src refid="raiderplanner.module.test.sourcepath"/>
      <patternset refid="excluded.from.compilation.raiderplanner"/>
    </javac>

    <copy todir="${raiderplanner.testoutput.dir}">
      <fileset dir="${module.raiderplanner.basedir}/Test">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>

 <target name="jar" depends="compile.module.raiderplanner">
   <mkdir dir="${raiderplanner.jaroutput.dir}"/>
    <manifestclasspath property="lib.list" jarfile="${raiderplanner.jaroutput.dir}/${ant.project.name}.jar">
        <classpath refid="external.classpath"/>
    </manifestclasspath>
    <jar destfile="${raiderplanner.jaroutput.dir}/${ant.project.name}.jar" basedir="${raiderplanner.output.dir}">
      <manifest>
        <attribute name="Main-Class" value="View.Main"/>
        <attribute name="Class-Path" value="${lib.list}"/>
      </manifest>
    </jar>
  </target>

  <target name="run" depends="jar">
    <java jar="${raiderplanner.jaroutput.dir}/${ant.project.name}.jar" fork="true"/>
  </target>
  
  <target name="clean.module.raiderplanner" description="cleanup module">
    <delete dir="${raiderplanner.output.dir}"/>
    <delete dir="${raiderplanner.testoutput.dir}"/>
    <delete dir="${raiderplanner.jaroutput.dir}"/>
  </target>
  
  <target name="init" description="Build initialization">
    <!-- Perform any build initialization in this target -->
  </target>
  
  <target name="clean" depends="clean.module.raiderplanner" description="cleanup all"/>
  
  <target name="build.modules" depends="init, clean, compile.module.raiderplanner, jar" description="build all modules"/>

  <target name="all" depends="build.modules" description="build all"/>

    <target name="test" depends="build.modules" >
        <junit haltonerror="yes" haltonfailure="yes">
            <classpath>
                <pathelement location="${basedir}/lib/junit-4.12.jar"/>
                <pathelement location="${basedir}/lib/hamcrest-core-1.3.jar"/>
                <pathelement location="${raiderplanner.output.dir}/"/>
                <pathelement location="${raiderplanner.testoutput.dir}/"/>

            </classpath>
          <classpath>
            <path refid="external.classpath" />
          </classpath>
            <batchtest>
                <fileset dir="${raiderplanner.testoutput.dir}">
                    <include name="**/*Test*" />
                </fileset>
            </batchtest>
            <formatter type="brief" usefile="false"/>
        </junit>
    </target>


</project>